/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_L 0
#define SYMBOLS_L 1
#define ARROWS_L  2
#define NUMBERS_L 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        capslock {
            bindings = <&kp CLCK>;
            key-positions = <5 4>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <3 4>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <10 9>;
        };

        prtsc {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <29 28>;
        };

        g {
            bindings = <&kp EQUAL>;
            key-positions = <6 7>;
        };

        sys_reset_left {
            bindings = <&sys_reset>;
            key-positions = <29 1>;
        };

        sys_reset_right {
            bindings = <&sys_reset>;
            key-positions = <30 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "0";
            bindings = <
&none  &kp Q       &kp W       &kp E         &kp R        &kp T        &kp Y       &kp U        &kp I           &kp O         &kp P          &none
&none  &mt LGUI A  &mt LALT S  &mt LSHIFT D  &mt LCTRL F  &kp G        &kp H       &mt RCTRL J  &mt RSHIFT K    &mt RALT L    &mt RGUI SEMI  &none
&none  &kp Z       &kp X       &kp C         &kp V        &kp B        &kp N       &kp M        &mt LBRC COMMA  &mt RBRC DOT  &mt SQT FSLH   &none
                               &mo 3         &mo 1        &kp SPACE    &kp RETURN  &mo 2        &trans
            >;
        };

        arrow_layer {
            label = "1";
            bindings = <
&none  &none  &none     &kp UP    &sys_reset  &none        &none      &none  &none  &none  &none  &none
&none  &none  &kp LEFT  &kp DOWN  &kp RIGHT   &none        &none      &none  &none  &none  &none  &none
&none  &none  &none     &none     &none       &none        &none      &none  &none  &none  &none  &none
                        &none     &trans      &kp SPACE    &kp ENTER  &none  &none
            >;
        };

        number_layer {
            label = "2";
            bindings = <
&none  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &none
&none  &none   &none   &none   &none   &none     &none   &none   &none   &none   &none   &none
&none  &none   &none   &none   &none   &none     &none   &none   &none   &none   &none   &none
                       &trans  &none   &none     &none   &trans  &none
            >;
        };

        bt_layer {
            label = "3";
            bindings = <
&none         &none         &none           &none         &none         &none          &none  &none  &none  &none  &none  &none
&none         &none         &kp LEFT_ARROW  &kp DEL       &kp RIGHT     &bt BT_CLR     &none  &none  &none  &none  &none  &none
&bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2    &bt BT_SEL 1  &bt BT_SEL 0  &bootloader    &none  &none  &none  &none  &none  &none
                                            &none         &none         &none          &none  &none  &none
            >;
        };
    };
};
